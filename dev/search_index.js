var documenterSearchIndex = {"docs":
[{"location":"#SnpArrays.jl","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Data from genome-wide association studies (GWAS) are often saved as a PLINK binary biallelic genotype table or .bed file. To be useful, such files should be accompanied by a .fam file, containing metadata on the rows of the table, and a .bim file, containing metadata on the columns. The .fam and .bim files are in tab-separated format.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"The table contains the observed allelic type at n single nucleotide polymorphism (SNP) positions for m individuals. A SNP corresponds to a nucleotide position on the genome where some degree of variation has been observed in a population, with each individual have one of two possible alleles at that position on each of a pair of chromosomes. Three possible genotypes and corresponding coding are","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Genotype Plink/SnpArray\nA1,A1 0x00\nmissing 0x01\nA1,A2 0x02\nA2,A2 0x03","category":"page"},{"location":"#Installation","page":"SnpArrays.jl","title":"Installation","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"This package requires Julia v0.7 or later, which can be obtained from https://julialang.org/downloads/ or by building Julia from the sources in the https://github.com/JuliaLang/julia repository.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"The package has not yet been registered and must be installed using the repository location. Start julia and use the ] key to switch to the package manager REPL","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"(v1.4) pkg> add https://github.com/OpenMendel/SnpArrays.jl","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Use the backspace key to return to the Julia REPL.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"versioninfo()","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Julia Version 1.4.1\nCommit 381693d3df* (2020-04-14 17:20 UTC)\nPlatform Info:\n  OS: Linux (x86_64-pc-linux-gnu)\n  CPU: Intel(R) Xeon(R) Silver 4114 CPU @ 2.20GHz\n  WORD_SIZE: 64\n  LIBM: libopenlibm\n  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"# for use in this tutorial\nusing SnpArrays, BenchmarkTools, Glob","category":"page"},{"location":"#Example-data","page":"SnpArrays.jl","title":"Example data","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"There are two example data sets attached to this package. They are availabe in the data folder of the package.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"datapath = normpath(SnpArrays.datadir())","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"\"/home/kose/.julia/dev/SnpArrays/data\"","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"readdir(glob\"mouse.*\", datapath)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"6-element Array{String,1}:\n \"/home/kose/.julia/dev/SnpArrays/data/mouse.bed\"\n \"/home/kose/.julia/dev/SnpArrays/data/mouse.bim\"\n \"/home/kose/.julia/dev/SnpArrays/data/mouse.fam\"\n \"/home/kose/.julia/dev/SnpArrays/data/mouse.test.hcat.bed\"\n \"/home/kose/.julia/dev/SnpArrays/data/mouse.test.hvcat.bed\"\n \"/home/kose/.julia/dev/SnpArrays/data/mouse.test.vcat.bed\"","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Data set EUR_subset contains no missing genotypes. It is located at","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"readdir(glob\"EUR_subset.*\", datapath)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"3-element Array{String,1}:\n \"/home/kose/.julia/dev/SnpArrays/data/EUR_subset.bed\"\n \"/home/kose/.julia/dev/SnpArrays/data/EUR_subset.bim\"\n \"/home/kose/.julia/dev/SnpArrays/data/EUR_subset.fam\"","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Data from recent studies, which have samples from tens of thousands of individuals at over a million SNP positions, would be in the tens or even hundreds of Gb range.","category":"page"},{"location":"#SnpArray","page":"SnpArrays.jl","title":"SnpArray","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpArray is the fundamental type for dealing with genotype data in Plink bed file. Each row of SnpArray is a sample and each column a SNP.","category":"page"},{"location":"#Constructor","page":"SnpArrays.jl","title":"Constructor","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"There are various ways to initialize a SnpArray.","category":"page"},{"location":"#Intitialize-from-Plink-file-set","page":"SnpArrays.jl","title":"Intitialize from Plink file set","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpArray can be initialized from the Plink bed file. The corresponding .fam needs to be present, which is used to determine the number of individuals.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"const mouse = SnpArray(SnpArrays.datadir(\"mouse.bed\"))","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1940×10150 SnpArray:\n 0x02  0x02  0x02  0x02  0x03  0x02  …  0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x03  0x02  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x02  0x02  0x02  0x02  0x02  0x02\n 0x02  0x02  0x02  0x02  0x03  0x02  …  0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x03  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x03  0x02  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x03  0x02  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x02  0x02  0x02  0x02  0x02  0x02\n 0x03  0x03  0x03  0x03  0x03  0x03  …  0x00  0x00  0x00  0x00  0x00  0x00\n 0x02  0x02  0x02  0x02  0x03  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x00  0x00  0x00  0x00  0x00  0x00\n    ⋮                             ⋮  ⋱           ⋮                    \n 0x03  0x03  0x03  0x03  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x02  0x02  …  0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x03  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x03  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x03  0x02  …  0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x03  0x02  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x03  0x02  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x02  0x02     0x01  0x01  0x01  0x01  0x01  0x01\n 0x00  0x00  0x00  0x00  0x03  0x00     0x03  0x03  0x03  0x03  0x03  0x03","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"The virtual size of the GWAS data is 1940 observations at each of 10150 SNP positions.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"size(mouse)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"(1940, 10150)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Because the file is memory-mapped opening the file and accessing the data is fast, even for very large .bed files.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"@btime(SnpArray(SnpArrays.datadir(\"mouse.bed\")));","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"  93.859 μs (64 allocations: 390.03 KiB)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"By default, the memory-mapped file is read only, changing entries is not allowed.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"mouse[1, 1] = 0x00","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"ReadOnlyMemoryError()\n\n\n\nStacktrace:\n\n [1] setindex! at ./array.jl:828 [inlined]\n\n [2] setindex!(::SnpArray, ::UInt8, ::Int64, ::Int64) at /home/kose/.julia/dev/SnpArrays/src/snparray.jl:131\n\n [3] top-level scope at In[9]:1","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"To possibly change genoytpes in a bed file, open with write permission","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"mouse = SnpArray(SnpArrays.datadir(\"mouse.bed\"), \"w\")","category":"page"},{"location":"#Initialize-from-only-bed-file","page":"SnpArrays.jl","title":"Initialize from only bed file","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"If only the bed file is present, user is required to supply the number of individuals in the second argument.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpArray(SnpArrays.datadir(\"mouse.bed\"), 1940)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1940×10150 SnpArray:\n 0x02  0x02  0x02  0x02  0x03  0x02  …  0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x03  0x02  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x02  0x02  0x02  0x02  0x02  0x02\n 0x02  0x02  0x02  0x02  0x03  0x02  …  0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x03  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x03  0x02  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x03  0x02  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x02  0x02  0x02  0x02  0x02  0x02\n 0x03  0x03  0x03  0x03  0x03  0x03  …  0x00  0x00  0x00  0x00  0x00  0x00\n 0x02  0x02  0x02  0x02  0x03  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x00  0x00  0x00  0x00  0x00  0x00\n    ⋮                             ⋮  ⋱           ⋮                    \n 0x03  0x03  0x03  0x03  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x02  0x02  …  0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x03  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x03  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x03  0x02  …  0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x03  0x02  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x03  0x02  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x02  0x02     0x01  0x01  0x01  0x01  0x01  0x01\n 0x00  0x00  0x00  0x00  0x03  0x00     0x03  0x03  0x03  0x03  0x03  0x03","category":"page"},{"location":"#Initialize-from-compressed-Plink-files","page":"SnpArrays.jl","title":"Initialize from compressed Plink files","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpArray can be initialized from Plink files in compressed formats: gz, zlib, zz, xz, zst, or bz2. For a complete list type","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpArrays.ALLOWED_FORMAT","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"If you want to support a new compressed format, file an issue.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Let us first compress the mouse data in gz format. We see gz format takes less than 1/3 storage of original Plink files.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"compress_plink(SnpArrays.datadir(\"mouse\"), \"gz\")\nreaddir(glob\"mouse.*.gz\", datapath)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"3-element Array{String,1}:\n \"/home/kose/.julia/dev/SnpArrays/data/mouse.bed.gz\"\n \"/home/kose/.julia/dev/SnpArrays/data/mouse.bim.gz\"\n \"/home/kose/.julia/dev/SnpArrays/data/mouse.fam.gz\"","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"To initialize SnpArray from gzipped Plink file, simply used the bed file with name ending with .bed.gz:","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"# requires corresponding `.fam.gz` file\nSnpArray(SnpArrays.datadir(\"mouse.bed.gz\"))","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1940×10150 SnpArray:\n 0x02  0x02  0x02  0x02  0x03  0x02  …  0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x03  0x02  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x02  0x02  0x02  0x02  0x02  0x02\n 0x02  0x02  0x02  0x02  0x03  0x02  …  0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x03  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x03  0x02  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x03  0x02  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x02  0x02  0x02  0x02  0x02  0x02\n 0x03  0x03  0x03  0x03  0x03  0x03  …  0x00  0x00  0x00  0x00  0x00  0x00\n 0x02  0x02  0x02  0x02  0x03  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x00  0x00  0x00  0x00  0x00  0x00\n    ⋮                             ⋮  ⋱           ⋮                    \n 0x03  0x03  0x03  0x03  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x02  0x02  …  0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x03  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x03  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x03  0x02  …  0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x03  0x02  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x03  0x02  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x02  0x02     0x01  0x01  0x01  0x01  0x01  0x01\n 0x00  0x00  0x00  0x00  0x03  0x00     0x03  0x03  0x03  0x03  0x03  0x03","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"or","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"# does not require corresponding `.fam.gz` file\nSnpArray(SnpArrays.datadir(\"mouse.bed.gz\"), 1940)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1940×10150 SnpArray:\n 0x02  0x02  0x02  0x02  0x03  0x02  …  0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x03  0x02  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x02  0x02  0x02  0x02  0x02  0x02\n 0x02  0x02  0x02  0x02  0x03  0x02  …  0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x03  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x03  0x02  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x03  0x02  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x02  0x02  0x02  0x02  0x02  0x02\n 0x03  0x03  0x03  0x03  0x03  0x03  …  0x00  0x00  0x00  0x00  0x00  0x00\n 0x02  0x02  0x02  0x02  0x03  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x00  0x00  0x00  0x00  0x00  0x00\n    ⋮                             ⋮  ⋱           ⋮                    \n 0x03  0x03  0x03  0x03  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x02  0x02  …  0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x03  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x03  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x03  0x02  …  0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x03  0x02  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x03  0x02  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x02  0x02     0x01  0x01  0x01  0x01  0x01  0x01\n 0x00  0x00  0x00  0x00  0x03  0x00     0x03  0x03  0x03  0x03  0x03  0x03","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"# clean up\nrm(SnpArrays.datadir(\"mouse.bed.gz\"), force=true)\nrm(SnpArrays.datadir(\"mouse.fam.gz\"), force=true)\nrm(SnpArrays.datadir(\"mouse.bim.gz\"), force=true)","category":"page"},{"location":"#Initialize-and-create-bed-file","page":"SnpArrays.jl","title":"Initialize and create bed file","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Initialize 5 rows and 3 columns with all (A1, A1) genotype (0x00) and memory-map to a bed file tmp.bed","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"tmpbf = SnpArray(\"tmp.bed\", 5, 3)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"5×3 SnpArray:\n 0x00  0x00  0x00\n 0x00  0x00  0x00\n 0x00  0x00  0x00\n 0x00  0x00  0x00\n 0x00  0x00  0x00","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Change entries","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"tmpbf[1:2, 1:2] .= 0x03\ntmpbf","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"5×3 SnpArray:\n 0x03  0x03  0x00\n 0x03  0x03  0x00\n 0x00  0x00  0x00\n 0x00  0x00  0x00\n 0x00  0x00  0x00","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"fill!(tmpbf, 0x02)\ntmpbf","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"5×3 SnpArray:\n 0x02  0x02  0x02\n 0x02  0x02  0x02\n 0x02  0x02  0x02\n 0x02  0x02  0x02\n 0x02  0x02  0x02","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"# clean up\nrm(\"tmp.bed\", force=true)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Initialize 5 rows and 3 columns with undefined genotypes without memory-mapping to any file","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"tmpbf = SnpArray(undef, 5, 3)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"5×3 SnpArray:\n 0x00  0x02  0x00\n 0x00  0x00  0x01\n 0x03  0x03  0x03\n 0x01  0x01  0x00\n 0x03  0x00  0x03","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Create a bed file corresponding to an existing SnpArray and memory-map it.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"tmpbf = SnpArray(\"tmp.bed\", tmpbf)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"5×3 SnpArray:\n 0x00  0x02  0x00\n 0x00  0x00  0x01\n 0x03  0x03  0x03\n 0x01  0x01  0x00\n 0x03  0x00  0x03","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"tmpbf[1, 1] = 0x02\ntmpbf","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"5×3 SnpArray:\n 0x02  0x02  0x00\n 0x00  0x00  0x01\n 0x03  0x03  0x03\n 0x01  0x01  0x00\n 0x03  0x00  0x03","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"# clean up\nrm(\"tmp.bed\", force=true)","category":"page"},{"location":"#convert-and-copyto!","page":"SnpArrays.jl","title":"convert and copyto!","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Most common usage of SnpArray is to convert genotypes to numeric values for statistical analysis. Conversion rule depends on genetic models (additive, dominant, or recessive), centering, scaling, or imputation.","category":"page"},{"location":"#convert","page":"SnpArrays.jl","title":"convert","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"convert function has 4 keyword arguments: model, center, scale, and impute.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"model keyword specifies the SNP model for conversion. By default convert function translates genotypes according to the additive SNP model, which essentially counts the number of A2 allele (0, 1 or 2) per genotype. Other SNP models are dominant and recessive, both in terms of the A2 allele.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Genotype SnpArray model=ADDITIVE_MODEL model=DOMINANT_MODEL model=RECESSIVE_MODEL\nA1,A1 0x00 0 0 0\nmissing 0x01 NaN NaN NaN\nA1,A2 0x02 1 1 0\nA2,A2 0x03 2 1 1","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"center=true tells convert to center each column by its mean. Default is false.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"scale=true tells convert to scale each column by its standard deviation. Default is false.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"impute=true tells convert to impute missing genotypes (0x01) by column mean. Default is false.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Convert whole SnpArray to a Float64 matrix using defaults (model=ADDITIVE_MODEL, center=false, scale=false, impute=false)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"convert(Matrix{Float64}, mouse)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1940×10150 Array{Float64,2}:\n 1.0  1.0  1.0  1.0  2.0  1.0  2.0  1.0  …    2.0    2.0    2.0    2.0    2.0\n 1.0  1.0  2.0  1.0  1.0  1.0  1.0  2.0       2.0    2.0    2.0    2.0    2.0\n 2.0  2.0  2.0  2.0  2.0  2.0  2.0  2.0       2.0    2.0    2.0    2.0    2.0\n 1.0  1.0  1.0  1.0  1.0  1.0  1.0  2.0       2.0    2.0    2.0    2.0    2.0\n 2.0  2.0  2.0  2.0  2.0  2.0  2.0  2.0       1.0    1.0    1.0    1.0    1.0\n 1.0  1.0  1.0  1.0  2.0  1.0  2.0  1.0  …    2.0    2.0    2.0    2.0    2.0\n 1.0  1.0  1.0  1.0  2.0  1.0  2.0  1.0       2.0    2.0    2.0    2.0    2.0\n 1.0  1.0  2.0  1.0  1.0  1.0  1.0  2.0       2.0    2.0    2.0    2.0    2.0\n 1.0  1.0  2.0  1.0  1.0  1.0  1.0  2.0       2.0    2.0    2.0    2.0    2.0\n 2.0  2.0  2.0  2.0  2.0  2.0  2.0  2.0       1.0    1.0    1.0    1.0    1.0\n 2.0  2.0  2.0  2.0  2.0  2.0  2.0  2.0  …    0.0    0.0    0.0    0.0    0.0\n 1.0  1.0  1.0  1.0  2.0  1.0  2.0  1.0       2.0    2.0    2.0    2.0    2.0\n 2.0  2.0  2.0  2.0  2.0  2.0  2.0  2.0       0.0    0.0    0.0    0.0    0.0\n ⋮                        ⋮              ⋱    ⋮                         \n 2.0  2.0  2.0  2.0  2.0  2.0  2.0  2.0       2.0    2.0    2.0    2.0    2.0\n 2.0  2.0  2.0  2.0  2.0  2.0  2.0  2.0       2.0    2.0    2.0    2.0    2.0\n 1.0  1.0  1.0  1.0  1.0  1.0  1.0  2.0  …    2.0    2.0    2.0    2.0    2.0\n 1.0  1.0  1.0  1.0  2.0  1.0  2.0  1.0       2.0    2.0    2.0    2.0    2.0\n 2.0  2.0  2.0  2.0  2.0  2.0  2.0  2.0       2.0    2.0    2.0    2.0    2.0\n 1.0  1.0  1.0  1.0  2.0  1.0  2.0  1.0       2.0    2.0    2.0    2.0    2.0\n 2.0  2.0  2.0  2.0  2.0  2.0  2.0  2.0       2.0    2.0    2.0    2.0    2.0\n 1.0  1.0  1.0  1.0  2.0  1.0  2.0  1.0  …    2.0    2.0    2.0    2.0    2.0\n 1.0  1.0  2.0  1.0  1.0  1.0  1.0  2.0       2.0    2.0    2.0    2.0    2.0\n 1.0  1.0  2.0  1.0  1.0  1.0  1.0  2.0       2.0    2.0    2.0    2.0    2.0\n 1.0  1.0  1.0  1.0  1.0  1.0  1.0  2.0     NaN    NaN    NaN    NaN    NaN\n 0.0  0.0  0.0  0.0  2.0  0.0  2.0  0.0       2.0    2.0    2.0    2.0    2.0","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"note: Note\nWhen convert or copyto! a slice or subarray of SnpArray, using view, @view or views is necessary for both correctness and efficiency. Without view, it's simply converting the UInt8 coding in original bed file.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Convert a column to Float64 vector using defaults (model=ADDITIVE_MODEL, center=false, scale=false, impute=false).","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"# convert(Vector{Float64}, view(mouse, :, 1)) # alternative syntax\n# @views convert(Vector{Float64}, mouse[:, 1]) # alternative syntax\nconvert(Vector{Float64}, @view(mouse[:, 1]))","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1940-element Array{Float64,1}:\n 1.0\n 1.0\n 2.0\n 1.0\n 2.0\n 1.0\n 1.0\n 1.0\n 1.0\n 2.0\n 2.0\n 1.0\n 2.0\n ⋮\n 2.0\n 2.0\n 1.0\n 1.0\n 2.0\n 1.0\n 2.0\n 1.0\n 1.0\n 1.0\n 1.0\n 0.0","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Convert a subarray of SnpArray to Float64 matrix using defaults (model=ADDITIVE_MODEL, center=false, scale=false, impute=false).","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"convert(Matrix{Float64}, @view(mouse[1:2:10, 1:2:10]))","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"5×5 Array{Float64,2}:\n 1.0  1.0  2.0  2.0  1.0\n 2.0  2.0  2.0  2.0  2.0\n 2.0  2.0  2.0  2.0  2.0\n 1.0  1.0  2.0  2.0  1.0\n 1.0  2.0  1.0  1.0  1.0","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Different SNP models (ADDITIVE_MODEL vs DOMINANT_MODEL vs RECESSIVE_MODEL)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"@views [convert(Vector{Float64}, mouse[:, 1], model=ADDITIVE_MODEL) convert(Vector{Float64}, mouse[:, 1], model=DOMINANT_MODEL) convert(Vector{Float64}, mouse[:, 1], model=RECESSIVE_MODEL)]","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1940×3 Array{Float64,2}:\n 1.0  1.0  0.0\n 1.0  1.0  0.0\n 2.0  1.0  1.0\n 1.0  1.0  0.0\n 2.0  1.0  1.0\n 1.0  1.0  0.0\n 1.0  1.0  0.0\n 1.0  1.0  0.0\n 1.0  1.0  0.0\n 2.0  1.0  1.0\n 2.0  1.0  1.0\n 1.0  1.0  0.0\n 2.0  1.0  1.0\n ⋮         \n 2.0  1.0  1.0\n 2.0  1.0  1.0\n 1.0  1.0  0.0\n 1.0  1.0  0.0\n 2.0  1.0  1.0\n 1.0  1.0  0.0\n 2.0  1.0  1.0\n 1.0  1.0  0.0\n 1.0  1.0  0.0\n 1.0  1.0  0.0\n 1.0  1.0  0.0\n 0.0  0.0  0.0","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Center and scale (last column) while convert","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"convert(Vector{Float64}, @view(mouse[:, end]), center=true, scale=true)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1940-element Array{Float64,1}:\n   0.4721460731147541\n   0.4721460731147541\n   0.4721460731147541\n   0.4721460731147541\n  -1.8819155626127624\n   0.4721460731147541\n   0.4721460731147541\n   0.4721460731147541\n   0.4721460731147541\n  -1.8819155626127624\n  -4.2359771983402785\n   0.4721460731147541\n  -4.2359771983402785\n   ⋮\n   0.4721460731147541\n   0.4721460731147541\n   0.4721460731147541\n   0.4721460731147541\n   0.4721460731147541\n   0.4721460731147541\n   0.4721460731147541\n   0.4721460731147541\n   0.4721460731147541\n   0.4721460731147541\n NaN\n   0.4721460731147541","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Center, scale, and impute (last column) while convert","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"convert(Vector{Float64}, @view(mouse[:, end]), center=true, scale=true, impute=true)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1940-element Array{Float64,1}:\n  0.4721460731147541\n  0.4721460731147541\n  0.4721460731147541\n  0.4721460731147541\n -1.8819155626127624\n  0.4721460731147541\n  0.4721460731147541\n  0.4721460731147541\n  0.4721460731147541\n -1.8819155626127624\n -4.2359771983402785\n  0.4721460731147541\n -4.2359771983402785\n  ⋮\n  0.4721460731147541\n  0.4721460731147541\n  0.4721460731147541\n  0.4721460731147541\n  0.4721460731147541\n  0.4721460731147541\n  0.4721460731147541\n  0.4721460731147541\n  0.4721460731147541\n  0.4721460731147541\n  0.0\n  0.4721460731147541","category":"page"},{"location":"#copyto!","page":"SnpArrays.jl","title":"copyto!","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"copyto! is the in-place version of convert. It takes the same keyword arguments (model, center, scale, impute) as convert.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Copy a column to a Float64 vector using defaults (model=:additive, center=false, scale=false, impute=false).","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"v = zeros(size(mouse, 1))\ncopyto!(v, @view(mouse[:, 1]))","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1940-element Array{Float64,1}:\n 1.0\n 1.0\n 2.0\n 1.0\n 2.0\n 1.0\n 1.0\n 1.0\n 1.0\n 2.0\n 2.0\n 1.0\n 2.0\n ⋮\n 2.0\n 2.0\n 1.0\n 1.0\n 2.0\n 1.0\n 2.0\n 1.0\n 1.0\n 1.0\n 1.0\n 0.0","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"@btime(copyto!($v, $@view(mouse[:, 1])));","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"  3.670 μs (0 allocations: 0 bytes)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Copy columns using defaults","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"v2 = zeros(size(mouse, 1), 2)\ncopyto!(v2, @view(mouse[:, 1:2]))","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1940×2 Array{Float64,2}:\n 1.0  1.0\n 1.0  1.0\n 2.0  2.0\n 1.0  1.0\n 2.0  2.0\n 1.0  1.0\n 1.0  1.0\n 1.0  1.0\n 1.0  1.0\n 2.0  2.0\n 2.0  2.0\n 1.0  1.0\n 2.0  2.0\n ⋮    \n 2.0  2.0\n 2.0  2.0\n 1.0  1.0\n 1.0  1.0\n 2.0  2.0\n 1.0  1.0\n 2.0  2.0\n 1.0  1.0\n 1.0  1.0\n 1.0  1.0\n 1.0  1.0\n 0.0  0.0","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"# roughly double the cost of copying 1 column\n@btime(copyto!($v2, $@view(mouse[:, 1:2])));","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"  7.415 μs (0 allocations: 0 bytes)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Center and scale","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"copyto!(v, @view(mouse[:, 1]), center=true, scale=true)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1940-element Array{Float64,1}:\n -0.16084075452851265\n -0.16084075452851265\n  1.2624897581484626\n -0.16084075452851265\n  1.2624897581484626\n -0.16084075452851265\n -0.16084075452851265\n -0.16084075452851265\n -0.16084075452851265\n  1.2624897581484626\n  1.2624897581484626\n -0.16084075452851265\n  1.2624897581484626\n  ⋮\n  1.2624897581484626\n  1.2624897581484626\n -0.16084075452851265\n -0.16084075452851265\n  1.2624897581484626\n -0.16084075452851265\n  1.2624897581484626\n -0.16084075452851265\n -0.16084075452851265\n -0.16084075452851265\n -0.16084075452851265\n -1.584171267205488","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"# more cost becoz of extra pass for center, scale, and/or impute\n@btime(copyto!($v, $(@view(mouse[:, 1])), center=true, scale=true));","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"  7.015 μs (0 allocations: 0 bytes)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Looping over all columns","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"v = Vector{Float64}(undef, size(mouse, 1))\nfunction loop_test(v, s)\n    for j in 1:size(s, 2)\n        copyto!(v, @view(s[:, j]))\n    end\nend\n@btime(loop_test($v, $mouse))","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"  50.405 ms (10150 allocations: 475.78 KiB)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Copy whole SnpArray","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"M = similar(mouse, Float64)\n@btime(copyto!($M, $mouse));","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"  63.859 ms (0 allocations: 0 bytes)","category":"page"},{"location":"#Summaries","page":"SnpArrays.jl","title":"Summaries","text":"","category":"section"},{"location":"#Counts","page":"SnpArrays.jl","title":"Counts","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Counts of each the four possible values for each column are returned by counts.`","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"counts(mouse, dims=1)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"4×10150 Array{Int64,2}:\n  358   359  252   358    33   359  …    56    56    56    56    56    56\n    2     0    4     3     4     1      173   173   162   173   174   175\n 1003  1004  888  1004   442  1004      242   242   242   242   242   242\n  577   577  796   575  1461   576     1469  1469  1480  1469  1468  1467","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Column 2 has no missing values (code 0x01, the second row in the column-counts table). In that SNP position for this sample, 359 indivduals are homozygous allele 1 (G according to the .bim file), 1004 are heterozygous, and 577 are homozygous allele 2 (A).","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"The counts by column and by row are cached in the SnpArray object. Accesses after the first are extremely fast.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"@btime(counts($mouse, dims=1));","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"  6.041 ns (0 allocations: 0 bytes)","category":"page"},{"location":"#Minor-allele-frequencies","page":"SnpArrays.jl","title":"Minor allele frequencies","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Minor allele frequencies (MAF) for each SNP.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"maf(mouse)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"10150-element Array{Float64,1}:\n 0.4434984520123839\n 0.4438144329896907\n 0.359504132231405\n 0.4439855446566856\n 0.13119834710743805\n 0.44404332129963897\n 0.1412706611570248\n 0.30299123259412064\n 0.4445018069179143\n 0.44424367578729995\n 0.43427835051546393\n 0.14075413223140498\n 0.304639175257732\n ⋮\n 0.0527624309392265\n 0.052980132450331174\n 0.08079096045197742\n 0.08253250423968339\n 0.08253250423968339\n 0.10022650056625138\n 0.10016977928692694\n 0.10016977928692694\n 0.09955005624296964\n 0.10016977928692694\n 0.10022650056625138\n 0.10028328611898019","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Minor allele (false means A1 is the minor allele; true means A2 is the minor allele) for each SNP.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"minorallele(mouse)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"10150-element BitArray{1}:\n 0\n 0\n 0\n 0\n 0\n 0\n 0\n 0\n 0\n 0\n 0\n 0\n 0\n ⋮\n 0\n 0\n 0\n 0\n 0\n 0\n 0\n 0\n 0\n 0\n 0\n 0","category":"page"},{"location":"#mean-and-var","page":"SnpArrays.jl","title":"mean and var","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"The package provides methods for the generics mean and var from the Statistics package.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"mean(mouse, dims=1)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1×10150 Array{Float64,2}:\n 1.113  1.11237  1.28099  1.11203  …  1.8009  1.79966  1.79955  1.79943","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"mean(mouse, dims=1, model=DOMINANT_MODEL)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1×10150 Array{Float64,2}:\n 0.815273  0.814948  0.869835  0.815178  …  0.968308  0.96829  0.968272","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"var(mouse, dims=1)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1×10150 Array{Float64,2}:\n 0.469929  0.470089  0.462605  0.469365  …  0.223714  0.223818  0.223923","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"These methods make use of the cached column or row counts and thus are very fast","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"@btime(mean($mouse, dims=1));","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"  15.498 μs (2 allocations: 79.39 KiB)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"The column-wise or row-wise standard deviations are returned by std.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"std(mouse, dims=2)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1940×1 Array{Float64,2}:\n 0.6504997290784408\n 0.6379008244533891\n 0.6558172726141286\n 0.6532675479248437\n 0.6744432174014563\n 0.6519092298111158\n 0.6779881845456428\n 0.6955814098050999\n 0.6437566832989493\n 0.6505283141088536\n 0.665444994623426\n 0.659392039592328\n 0.6641674726999468\n ⋮\n 0.6599158250006595\n 0.688387450736178\n 0.6664063015924304\n 0.6613451651895259\n 0.6659810347614777\n 0.6274577846909379\n 0.6823658517777204\n 0.6695299551061924\n 0.710756592739754\n 0.6387913736114869\n 0.6736492722732016\n 0.688855476425891","category":"page"},{"location":"#Missing-rate","page":"SnpArrays.jl","title":"Missing rate","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Proportion of missing genotypes","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"missingrate(mouse, 1)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"10150-element Array{Float64,1}:\n 0.0010309278350515464\n 0.0\n 0.002061855670103093\n 0.0015463917525773195\n 0.002061855670103093\n 0.0005154639175257732\n 0.002061855670103093\n 0.0005154639175257732\n 0.0015463917525773195\n 0.0015463917525773195\n 0.0\n 0.002061855670103093\n 0.0\n ⋮\n 0.06701030927835051\n 0.06597938144329897\n 0.08762886597938144\n 0.08814432989690722\n 0.08814432989690722\n 0.08969072164948454\n 0.08917525773195877\n 0.08917525773195877\n 0.08350515463917525\n 0.08917525773195877\n 0.08969072164948454\n 0.09020618556701031","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"missingrate(mouse, 2)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1940-element Array{Float64,1}:\n 0.00019704433497536947\n 0.0\n 0.018423645320197045\n 0.0007881773399014779\n 0.0\n 0.004236453201970443\n 0.0051231527093596055\n 0.00039408866995073894\n 0.005517241379310344\n 0.0016748768472906405\n 0.0\n 9.852216748768474e-5\n 0.0004926108374384236\n ⋮\n 0.000689655172413793\n 0.004729064039408867\n 0.0004926108374384236\n 0.001083743842364532\n 0.00019704433497536947\n 0.0025615763546798028\n 0.0038423645320197044\n 0.001379310344827586\n 0.0064039408866995075\n 0.002857142857142857\n 0.0011822660098522167\n 0.00029556650246305416","category":"page"},{"location":"#Location-of-the-missing-values","page":"SnpArrays.jl","title":"Location of the missing values","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"The positions of the missing data are evaluated by","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"mp = missingpos(mouse)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1940×10150 SparseArrays.SparseMatrixCSC{Bool,Int32} with 33922 stored entries:\n  [702 ,     1]  =  1\n  [949 ,     1]  =  1\n  [914 ,     3]  =  1\n  [949 ,     3]  =  1\n  [1604,     3]  =  1\n  [1891,     3]  =  1\n  [81  ,     4]  =  1\n  [990 ,     4]  =  1\n  [1882,     4]  =  1\n  [81  ,     5]  =  1\n  [676 ,     5]  =  1\n  [990 ,     5]  =  1\n  ⋮\n  [1789, 10150]  =  1\n  [1791, 10150]  =  1\n  [1795, 10150]  =  1\n  [1846, 10150]  =  1\n  [1848, 10150]  =  1\n  [1851, 10150]  =  1\n  [1853, 10150]  =  1\n  [1860, 10150]  =  1\n  [1873, 10150]  =  1\n  [1886, 10150]  =  1\n  [1894, 10150]  =  1\n  [1897, 10150]  =  1\n  [1939, 10150]  =  1","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"@btime(missingpos($mouse));","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"  43.687 ms (19274 allocations: 1.80 MiB)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"So, for example, the number of missing data values in each column can be evaluated as","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"sum(mp, dims=1)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1×10150 Array{Int64,2}:\n 2  0  4  3  4  1  4  1  3  3  0  4  0  …  174  173  173  162  173  174  175","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"although it is faster, but somewhat more obscure, to use","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"view(counts(mouse, dims=1), 2:2, :)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1×10150 view(::Array{Int64,2}, 2:2, :) with eltype Int64:\n 2  0  4  3  4  1  4  1  3  3  0  4  0  …  174  173  173  162  173  174  175","category":"page"},{"location":"#Genetic-relationship-matrix","page":"SnpArrays.jl","title":"Genetic relationship matrix","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"grm function computes the empirical kinship matrix using either the classical genetic relationship matrix, grm(A, model=:GRM), or the method of moment method, grm(A, model=:MoM), or the robust method, grm(A, model=:Robust). ","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Classical genetic relation matrix","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"# grm(mouse, method=:MoM)\n# grm(mouse, method=:Robust)\ngrm(mouse, method=:GRM)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1940×1940 Array{Float64,2}:\n  0.478301    -0.0331304    0.0135612    …  -0.0347737   -0.0129443\n -0.0331304    0.422771    -0.0389227        0.0457987    0.00556832\n  0.0135612   -0.0389227    0.509248        -0.0356689   -0.0608705\n  0.0198205    0.00728645  -0.00935362      -0.0302404   -0.0102152\n  0.056747    -0.0163418   -0.00495283      -0.0413347   -0.0415659\n -0.0165628   -0.0191127   -0.0112181    …   0.0177118   -0.0193087\n  0.123771    -0.0404167    0.00442739       0.00880649  -0.0437565\n -0.0628362    0.172552    -0.0728312        0.0640027   -0.0281429\n  0.0605018   -0.0260505    0.00398852      -0.00277754  -0.0607773\n  0.108886    -0.0204594   -0.00767711      -0.0210501    0.00343526\n -0.0142307    0.00270989  -0.0235504    …  -0.0223563   -0.028408\n -0.0306022    0.197743    -0.00244269       0.0213998   -0.0478472\n -0.0131463   -0.0226707    0.0223522       -0.037288     0.0493662\n  ⋮                                      ⋱               \n  0.0176725   -0.0165609    0.0378308        0.0238751   -0.0420143\n  0.0024949   -0.0411137    0.0154847       -0.0380656   -0.0650806\n  0.0952286    0.00894298  -0.0163446    …  -0.0202633   -0.0219594\n -0.0309488   -0.0228342   -0.0478253       -0.014896     0.261623\n -0.004804    -0.0375168   -0.0211418       -0.0172572    0.0359166\n  0.0076296    0.0481887   -0.0328968        0.0920425   -0.0292548\n  0.070045    -0.0302138    0.000647283      0.00892069  -0.00632566\n  0.0378132   -6.59565e-5   0.00888932   …   0.00230815  -0.0291622\n -0.00132837   0.00223654   0.0495928       -0.00936248   0.0299075\n  0.0640864   -0.0241218    0.00602283       0.00403413   0.00689551\n -0.0347737    0.0457987   -0.0356689        0.509228    -0.035215\n -0.0129443    0.00556832  -0.0608705       -0.035215     0.552712","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"@btime(grm($mouse, method=:GRM));","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"  499.639 ms (25 allocations: 28.95 MiB)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Using Float32 (single precision) potentially saves memory usage and computation time.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"grm(mouse, method=:GRM, t=Float32)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1940×1940 Array{Float32,2}:\n  0.478301    -0.0331304    0.0135612    …  -0.0347737   -0.0129443\n -0.0331304    0.422771    -0.0389227        0.0457987    0.00556833\n  0.0135612   -0.0389227    0.509248        -0.0356689   -0.0608705\n  0.0198205    0.00728645  -0.00935361      -0.0302404   -0.0102152\n  0.056747    -0.0163418   -0.00495284      -0.0413347   -0.0415659\n -0.0165628   -0.0191127   -0.0112181    …   0.0177117   -0.0193087\n  0.123771    -0.0404167    0.0044274        0.0088065   -0.0437565\n -0.0628363    0.172552    -0.0728312        0.0640027   -0.0281429\n  0.0605018   -0.0260505    0.00398853      -0.00277754  -0.0607773\n  0.108886    -0.0204594   -0.00767711      -0.0210501    0.00343524\n -0.0142307    0.00270989  -0.0235504    …  -0.0223563   -0.028408\n -0.0306022    0.197743    -0.00244268       0.0213998   -0.0478472\n -0.0131464   -0.0226707    0.0223522       -0.037288     0.0493662\n  ⋮                                      ⋱               \n  0.0176725   -0.016561     0.0378308        0.0238751   -0.0420143\n  0.00249491  -0.0411137    0.0154847       -0.0380656   -0.0650806\n  0.0952286    0.00894298  -0.0163446    …  -0.0202633   -0.0219594\n -0.0309488   -0.0228342   -0.0478253       -0.014896     0.261623\n -0.00480401  -0.0375167   -0.0211418       -0.0172572    0.0359166\n  0.00762961   0.0481887   -0.0328968        0.0920425   -0.0292547\n  0.070045    -0.0302138    0.000647269      0.00892068  -0.00632566\n  0.0378132   -6.59475f-5   0.00888932   …   0.00230815  -0.0291622\n -0.00132838   0.00223653   0.0495928       -0.00936246   0.0299075\n  0.0640864   -0.0241219    0.00602283       0.00403413   0.00689551\n -0.0347737    0.0457987   -0.0356689        0.509228    -0.035215\n -0.0129443    0.00556833  -0.0608705       -0.035215     0.552712","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"@btime(grm($mouse, method=:GRM, t=Float32));","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"  318.386 ms (26 allocations: 14.60 MiB)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"By default, grm exlcude SNPs with minor allele frequency below 0.01. This can be changed by the keyword argument minmaf.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"# compute GRM excluding SNPs with MAF≤0.05 \ngrm(mouse, minmaf=0.05)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1940×1940 Array{Float64,2}:\n  0.478556    -0.0331783    0.013541     …  -0.0348225   -0.0129761\n -0.0331783    0.422993    -0.0389741        0.0457975    0.00554753\n  0.013541    -0.0389741    0.50952         -0.0357183   -0.0609305\n  0.0203209    0.00777944  -0.00887047      -0.0297696   -0.00972836\n  0.0567523   -0.0163798   -0.00498406      -0.0413874   -0.0416146\n -0.0166009   -0.0191523   -0.0112531    …   0.0176939   -0.0193442\n  0.123816    -0.0404689    0.00440171       0.0087834   -0.0438065\n -0.0629017    0.172626    -0.0729026        0.0640123   -0.0281836\n  0.0605093   -0.0260942    0.00396257      -0.00280748  -0.0608373\n  0.108922    -0.0204998   -0.00770996      -0.0210909    0.00341321\n -0.0142674    0.00268319  -0.0235927    …  -0.0223978   -0.0284489\n -0.0306486    0.197832    -0.00247243       0.0213842   -0.0478996\n -0.0131824   -0.0227124    0.0223371       -0.0373384    0.0493713\n  ⋮                                      ⋱               \n  0.0176546   -0.016599     0.0378249        0.0238609   -0.0420633\n  0.00246808  -0.0411663    0.0154656       -0.0381165   -0.0651432\n  0.0952566    0.00891997  -0.0163826    …  -0.0203036   -0.0219965\n -0.0309912   -0.0228718   -0.0478777       -0.0149289    0.261754\n -0.00483514  -0.0375673   -0.0211827       -0.0172957    0.0359138\n  0.00770862   0.0482917   -0.0328417        0.0921714   -0.0292961\n  0.0700582   -0.03026      0.000619365      0.00889767  -0.00635348\n  0.0378313   -7.02155e-5   0.00889036   …   0.0023053   -0.0291795\n -0.00133338   0.00223364   0.0496179       -0.00937223   0.0299252\n  0.0641201   -0.0241403    0.00602217       0.0040323    0.00689958\n -0.0348225    0.0457975   -0.0357183        0.509501    -0.0352599\n -0.0129761    0.00554753  -0.0609305       -0.0352599    0.553015","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"To specify specific SNPs for calculating empirical kinship, use the cinds keyword (default is nothing). When cinds is specified, minmaf is ignored.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"# GRM using every other SNP\ngrm(mouse, cinds=1:2:size(mouse, 2))","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1940×1940 Array{Float64,2}:\n  0.477       -0.0307774     0.0118026   …  -0.0320301    -0.0125113\n -0.0307774    0.425085     -0.0367459       0.0480442     0.00519065\n  0.0118026   -0.0367459     0.505038       -0.0385129    -0.0631557\n  0.0166017    0.00614789   -0.00919695     -0.0399744    -0.0104884\n  0.05724     -0.0122148    -0.00543377     -0.0395663    -0.0372998\n -0.0193129   -0.0224378    -0.009277    …   0.0153785    -0.0220184\n  0.12194     -0.0410682     0.00274307      0.00796748   -0.0441578\n -0.0624031    0.173985     -0.0724784       0.0663191    -0.0294243\n  0.0627626   -0.0288615     0.00265615     -0.00449877   -0.0579702\n  0.110878    -0.0232715    -0.00881604     -0.021272      0.00169016\n -0.00800735  -0.00149824   -0.019791    …  -0.024124     -0.0289397\n -0.0272944    0.19894      -0.00534771      0.0209384    -0.0511051\n -0.011388    -0.0281003     0.0273853      -0.0360047     0.0459359\n  ⋮                                      ⋱                \n  0.0169431   -0.0136989     0.0340794       0.0272811    -0.041189\n  0.00201325  -0.0426611     0.0124353      -0.0387982    -0.0656181\n  0.097587     0.0058123    -0.0160698   …  -0.021457     -0.023226\n -0.0342014   -0.0211246    -0.0490112      -0.0129575     0.256552\n -0.00324255  -0.0423482    -0.0192699      -0.0149015     0.0339388\n  0.00575353   0.0464237    -0.0294694       0.0924759    -0.0275451\n  0.0748725   -0.0258461    -0.00141068      0.0115232    -0.00486589\n  0.0386555    0.000612169   0.00959997  …  -0.000357284  -0.0334687\n -0.00343056   0.0120673     0.0455375      -0.0103798     0.0336959\n  0.0656909   -0.0193469     0.00600815      0.00188545    0.00726181\n -0.0320301    0.0480442    -0.0385129       0.513285     -0.0317963\n -0.0125113    0.00519065   -0.0631557      -0.0317963     0.54471","category":"page"},{"location":"#Filtering","page":"SnpArrays.jl","title":"Filtering","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Before GWAS, we often need to filter SNPs and/or samples according to genotyping success rates, minor allele frequencies, and Hardy-Weinberg Equilibrium test. This can be achieved by the filter function.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpArrays.filter","category":"page"},{"location":"#SnpArrays.filter","page":"SnpArrays.jl","title":"SnpArrays.filter","text":"SnpArrays.filter(s)\n\nFilter a SnpArray according to genotyping success rate, minor allele frequencies,  and/or Hardy-Weinberg test.\n\nInput\n\ns: a SnpArray or Plink file name without the bim, fam, bed suffix.\n\nKeyword argument\n\nmin_success_rate_per_row: Threshold for SNP genotyping success rate. Default 0.98. \nmin_success_rate_per_col: Threshold for person genotyping success rate. Default 0.98. \nmin_maf: Minimum minor allele frequency. Default 0.01.\nmin_hwe_pval: Minimum p-value for Hardy-Weinberg test. Default 0 (not filter HWE).\nmaxiters: Maximum number of filtering iterations. Default is 5.\nverbose: Show progress.\n\nOutput\n\nrmask: BitVector indicating rows after filtering.\ncmask: BitVector indicating columns after filtering.\n\n\n\n\n\nSnpArrays.filter(src, rowinds, colinds; des = src * \".filtered\")\n\nFilter src Plink files according to row indices rowinds and column indices  colinds and write to a new set of Plink files des.\n\nInput\n\nsrc: source Plink file name without suffix \".bed\", \".fam\" or \".bim\".\nrowinds: row indices.\ncolinds: column indices.\n\nKeyword arguments\n\ndes: output Plink file name; default is src * \".filtered\".\n\n\n\n\n\nSnpArrays.filter(srcbedfile, srcbimfile, srcfamfile, rowinds, colinds; des = src * \".filtered\")\n\nFilter Plink files  with .gz format or differently named bim and bed files according to row indices  rowinds and column indices colinds and write to a new set of Plink files des.\n\nInput\n\nsrcbedfile: bed file name with suffix such as .bed or .bed.gz.\nsrcbimfile: bed file name with suffix such as .bim or .bim.gz.\nsrcfamfile: bed file name with suffix such as .fam or .fam.gz.\nrowinds: row indices.\ncolinds: column indices.\n\nKeyword arguments\n\ndes: output Plink file name; default is src * \".filtered\".\n\n\n\n\n\n","category":"function"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"By default, it outputs row and column index vectors such that sample-wise and SNP-wise genotyping success rate are at least 0.98 and minor allele frequencies are at least 0.01. User can opt to filter according to Hardy-Weinberg test by setting the minumum p-value min_hwe_pval.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"rowmask, colmask =  SnpArrays.filter(mouse)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"(Bool[1, 1, 1, 1, 1, 1, 1, 1, 1, 1  …  1, 1, 1, 1, 1, 1, 1, 1, 1, 1], Bool[1, 1, 1, 1, 1, 1, 1, 1, 1, 1  …  0, 0, 0, 0, 0, 0, 0, 0, 0, 0])","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"count(rowmask), count(colmask)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"(1931, 10072)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"@btime(SnpArrays.filter($mouse, min_success_rate_per_row=0.999, min_success_rate_per_col=0.999));","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"  151.694 ms (11460 allocations: 171.28 MiB)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"One may use the rowmask and colmask to filter and save filtering result as Plink files.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpArrays.filter(SnpArrays.datadir(\"mouse\"), rowmask, colmask)","category":"page"},{"location":"#Filter-Plink-files","page":"SnpArrays.jl","title":"Filter Plink files","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Filter a set of Plink files according to row indices and column indices. By result, filtered Plink files are saved as srcname.filtered.bed, srcname.filtered.fam, and srcname.filtered.bim, where srcname is the source Plink file name. You can also specify destimation file name using keyword des.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpArrays.filter(SnpArrays.datadir(\"mouse\"), 1:5, 1:5)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"5×5 SnpArray:\n 0x02  0x02  0x02  0x02  0x03\n 0x02  0x02  0x03  0x02  0x02\n 0x03  0x03  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x02\n 0x03  0x03  0x03  0x03  0x03","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"# clean up\nrm(SnpArrays.datadir(\"mouse.filtered.bed\"), force=true)\nrm(SnpArrays.datadir(\"mouse.filtered.fam\"), force=true)\nrm(SnpArrays.datadir(\"mouse.filtered.bim\"), force=true)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Filter a set of Plink files according to logical vectors.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpArrays.filter(SnpArrays.datadir(\"mouse\"), rowmask, colmask)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1931×10072 SnpArray:\n 0x02  0x02  0x02  0x02  0x03  0x02  …  0x02  0x03  0x02  0x02  0x03  0x03\n 0x02  0x02  0x03  0x02  0x02  0x02     0x03  0x03  0x03  0x00  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x03  0x00  0x00  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x02  0x02     0x03  0x03  0x03  0x00  0x00  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x02  0x03  0x02  0x02  0x02  0x03\n 0x02  0x02  0x02  0x02  0x03  0x02  …  0x03  0x00  0x00  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x03  0x02     0x03  0x03  0x00  0x03  0x00  0x00\n 0x02  0x02  0x03  0x02  0x02  0x02     0x00  0x03  0x03  0x00  0x03  0x03\n 0x02  0x02  0x03  0x02  0x02  0x02     0x03  0x00  0x03  0x00  0x00  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x02  0x03  0x02  0x02  0x02  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03  …  0x03  0x03  0x00  0x03  0x00  0x03\n 0x02  0x02  0x02  0x02  0x03  0x02     0x03  0x03  0x03  0x00  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x03  0x00  0x00  0x03  0x03  0x03\n    ⋮                             ⋮  ⋱                             ⋮  \n 0x03  0x03  0x03  0x03  0x03  0x03     0x03  0x03  0x00  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03  …  0x03  0x03  0x03  0x00  0x00  0x00\n 0x02  0x02  0x02  0x02  0x02  0x02     0x03  0x03  0x03  0x00  0x03  0x03\n 0x02  0x02  0x02  0x02  0x03  0x02     0x03  0x00  0x03  0x00  0x00  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x03  0x03  0x00  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x03  0x02     0x03  0x03  0x03  0x03  0x00  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03  …  0x02  0x03  0x03  0x00  0x03  0x03\n 0x02  0x02  0x02  0x02  0x03  0x02     0x03  0x03  0x00  0x03  0x03  0x03\n 0x02  0x02  0x03  0x02  0x02  0x02     0x03  0x00  0x00  0x03  0x00  0x03\n 0x02  0x02  0x03  0x02  0x02  0x02     0x03  0x03  0x00  0x03  0x03  0x03\n 0x02  0x02  0x02  0x02  0x02  0x02     0x03  0x00  0x00  0x03  0x03  0x03\n 0x00  0x00  0x00  0x00  0x03  0x00  …  0x03  0x03  0x00  0x03  0x00  0x03","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"readdir(glob\"mouse.filtered.*\", datapath)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"3-element Array{String,1}:\n \"/home/kose/.julia/dev/SnpArrays/data/mouse.filtered.bed\"\n \"/home/kose/.julia/dev/SnpArrays/data/mouse.filtered.bim\"\n \"/home/kose/.julia/dev/SnpArrays/data/mouse.filtered.fam\"","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"# clean up\nrm(SnpArrays.datadir(\"mouse.filtered.bed\"), force=true)\nrm(SnpArrays.datadir(\"mouse.filtered.fam\"), force=true)\nrm(SnpArrays.datadir(\"mouse.filtered.bim\"), force=true)","category":"page"},{"location":"#Concatenating-SnpArrays","page":"SnpArrays.jl","title":"Concatenating SnpArrays","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Concatenation of SnpArrays is implemented in hcat, vcat, and hvcat functions. By default, the resulting .bed file is saved as a file beginning with tmp_ in the working directory. You can specify destination using keyword des. ","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"For concatenation, SnpArray arguments do not deal with .fam or .bim files at all. You can use SnpData as the arguments to create those files (see below).","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"s = SnpArrays.filter(SnpArrays.datadir(\"mouse\"), 1:2, 1:3)\ns","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"2×3 SnpArray:\n 0x02  0x02  0x02\n 0x02  0x02  0x03","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"all(s .== [[0x02 0x02 0x02];\n[0x02 0x02 0x03]])","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"true","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Standard concatenation works just like any other arrays. However, a temporary file is created as a side effect.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"[s s s]","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"2×9 SnpArray:\n 0x02  0x02  0x02  0x02  0x02  0x02  0x02  0x02  0x02\n 0x02  0x02  0x03  0x02  0x02  0x03  0x02  0x02  0x03","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"[s; s; s]","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"6×3 SnpArray:\n 0x02  0x02  0x02\n 0x02  0x02  0x03\n 0x02  0x02  0x02\n 0x02  0x02  0x03\n 0x02  0x02  0x02\n 0x02  0x02  0x03","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"[s s s; s s s]","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"4×9 SnpArray:\n 0x02  0x02  0x02  0x02  0x02  0x02  0x02  0x02  0x02\n 0x02  0x02  0x03  0x02  0x02  0x03  0x02  0x02  0x03\n 0x02  0x02  0x02  0x02  0x02  0x02  0x02  0x02  0x02\n 0x02  0x02  0x03  0x02  0x02  0x03  0x02  0x02  0x03","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"readdir(glob\"tmp_*\", \".\")","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"15-element Array{String,1}:\n \"./tmp_hcat_1.bed\"\n \"./tmp_hcat_1.bim\"\n \"./tmp_hcat_1.fam\"\n \"./tmp_hcat_arr_1.bed\"\n \"./tmp_hvcat1.bed\"\n \"./tmp_hvcat1.bim\"\n \"./tmp_hvcat1.fam\"\n \"./tmp_hvcat_arr_1.bed\"\n \"./tmp_vcat_1.bed\"\n \"./tmp_vcat_1.bim\"\n \"./tmp_vcat_1.fam\"\n \"./tmp_vcat_arr_1.bed\"\n \"./tmp_vcat_arr_2.bed\"\n \"./tmp_vcat_arr_3.bed\"\n \"./tmp_vcat_arr_4.bed\"","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"In order to set the destination .bed file, you can add the keyword argument des.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"hcat(s, s, s; des=SnpArrays.datadir(\"mouse.test.hcat\"))","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"2×9 SnpArray:\n 0x02  0x02  0x02  0x02  0x02  0x02  0x02  0x02  0x02\n 0x02  0x02  0x03  0x02  0x02  0x03  0x02  0x02  0x03","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"vcat(s, s, s; des=SnpArrays.datadir(\"mouse.test.vcat\"))","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"6×3 SnpArray:\n 0x02  0x02  0x02\n 0x02  0x02  0x03\n 0x02  0x02  0x02\n 0x02  0x02  0x03\n 0x02  0x02  0x02\n 0x02  0x02  0x03","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"hvcat((3, 3), s, s, s, s, s, s; des=SnpArrays.datadir(\"mouse.test.hvcat\"))","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"4×9 SnpArray:\n 0x02  0x02  0x02  0x02  0x02  0x02  0x02  0x02  0x02\n 0x02  0x02  0x03  0x02  0x02  0x03  0x02  0x02  0x03\n 0x02  0x02  0x02  0x02  0x02  0x02  0x02  0x02  0x02\n 0x02  0x02  0x03  0x02  0x02  0x03  0x02  0x02  0x03","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"# clean up\nrm(SnpArrays.datadir(\"mouse.filtered.bed\"), force=true)\nrm(SnpArrays.datadir(\"mouse.filtered.fam\"), force=true)\nrm(SnpArrays.datadir(\"mouse.filtered.bim\"), force=true)\ntmplist = readdir(glob\"tmp_*.bed\", \".\")\nfor f in tmplist\n    rm(f, force=true)\nend\nrm(SnpArrays.datadir(\"mouse.test.hcat.bed\"), force=true)\nrm(SnpArrays.datadir(\"mouse.test.vcat.bed\"), force=true)\nrm(SnpArrays.datadir(\"mouse.test.hvcat.bed\"), force=true)","category":"page"},{"location":"#SnpBitMatrix","page":"SnpArrays.jl","title":"SnpBitMatrix","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"In some applications we want to perform linear algebra using SnpArray directly without expanding it to numeric matrix. This is achieved by the SnpBitMatrix type. The implementation assumes:","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"the SnpArray does not have missing genotypes, and\nthe matrix corresponding to SnpArray is the matrix of A2 allele counts.","category":"page"},{"location":"#Constructor-2","page":"SnpArrays.jl","title":"Constructor","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"First let's load a data set without missing genotypes.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"const EUR = SnpArray(SnpArrays.datadir(\"EUR_subset.bed\"))","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"379×54051 SnpArray:\n 0x03  0x03  0x03  0x02  0x02  0x03  …  0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x02  0x03  0x02  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x03  0x03  0x03     0x02  0x02  0x02  0x03  0x03  0x02\n 0x03  0x03  0x03  0x00  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x00  0x03  0x03     0x02  0x02  0x02  0x03  0x03  0x03\n 0x02  0x03  0x03  0x03  0x03  0x03  …  0x03  0x03  0x03  0x03  0x03  0x02\n 0x02  0x03  0x03  0x02  0x02  0x03     0x03  0x03  0x02  0x02  0x03  0x03\n 0x02  0x03  0x03  0x03  0x02  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x00  0x02  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x03  0x03  0x02  0x03  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x02  0x03  0x03  …  0x03  0x03  0x02  0x02  0x03  0x03\n 0x03  0x03  0x03  0x02  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x02\n 0x03  0x02  0x03  0x02  0x02  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n    ⋮                             ⋮  ⋱     ⋮                             ⋮\n 0x03  0x03  0x03  0x00  0x02  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x02  0x02  0x03     0x02  0x02  0x02  0x03  0x02  0x03\n 0x03  0x03  0x03  0x02  0x02  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x03  0x03  0x02  0x03  0x03  …  0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x00  0x00  0x03     0x02  0x02  0x02  0x03  0x03  0x03\n 0x02  0x03  0x03  0x03  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x02  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x02  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x03  0x03  0x03  0x03  0x03  …  0x03  0x03  0x02  0x02  0x03  0x03\n 0x03  0x03  0x03  0x00  0x03  0x03     0x03  0x03  0x03  0x03  0x03  0x03\n 0x02  0x03  0x03  0x02  0x00  0x02     0x03  0x03  0x03  0x03  0x03  0x03\n 0x03  0x03  0x03  0x02  0x02  0x03     0x03  0x03  0x03  0x03  0x03  0x03","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"To instantiate a SnpBitMatrix based on SnpArray,","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"const EURbm = SnpBitMatrix{Float64}(EUR, model=ADDITIVE_MODEL, center=true, scale=true);","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"The constructor shares the same keyword arguments as the convert or copyto! functions. The type parameter, Float64 in this example, indicates the SnpBitMatrix acts like a Float64 matrix.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"The memory usage of the SnpBitMatrix should be similar to the SnpArray, or equivalently bed file size, if model=ADDITIVE_MODEL, or half of that of SnpArray if model=DOMINANT_MODEL or model=RECESSIVE_MODEL.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Base.summarysize(EUR), Base.summarysize(EURbm)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"(6876757, 6421960)","category":"page"},{"location":"#Linear-algebra","page":"SnpArrays.jl","title":"Linear algebra","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"A SnpBitMatrix acts similar to a regular matrix and responds to size, eltype, and SnpBitMatrix-vector multiplications.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"@show size(EURbm)\n@show eltype(EURbm)\n@show typeof(EURbm) <: AbstractMatrix;","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"size(EURbm) = (379, 54051)\neltype(EURbm) = Float64\ntypeof(EURbm) <: AbstractMatrix = true","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpBitMatrix-vector multiplication is mathematically equivalent to the corresponding Float matrix contained from convert or copyto! a SnpArray.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"using LinearAlgebra\nv1 = randn(size(EUR, 1))\nv2 = randn(size(EUR, 2))\nA = convert(Matrix{Float64}, EUR, model=ADDITIVE_MODEL, center=true, scale=true)\nnorm(EURbm * v2 -  A * v2)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"6.729024295676686e-11","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"norm(EURbm' * v1 - A' * v1)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"5.9742425663560414e-12","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"In this example, the Float64 matrix fits into memory so the SnpBitMatrix-vector multiplication is much slower than Matrix{Float64}-vector multiplication (highly optimized BLAS).","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"out1 = Vector{Float64}(undef, size(EUR, 1))\nout2 = Vector{Float64}(undef, size(EUR, 2))\n@btime(mul!($out1, $EURbm, $v2));","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"  8.655 ms (0 allocations: 0 bytes)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"@btime(mul!($out1, $A, $v2));","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"  7.769 ms (0 allocations: 0 bytes)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"@btime(mul!($out2, $transpose($EURbm), $v1));","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"  6.565 ms (1 allocation: 16 bytes)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"@btime(mul!($out2, $transpose($A), $v1));","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"  2.955 ms (0 allocations: 0 bytes)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"In another test example with ~1GB bed file, SnpBitMatrix-vector multiplication is about 3-5 folder faster than the corresponding Matrix{Float64}-vector multiplication, because the Matrix{Float64} matrix cannot fit into the memory.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpBitMatrix can be created from a subarray of SnpArray.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"EURsub = @view EUR[1:2:100, 1:2:100]\nEURsubbm = SnpBitMatrix{Float64}(EURsub, model=ADDITIVE_MODEL, center=true, scale=true);","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Base.summarysize(EURsubbm)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"2600","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"@show size(EURsubbm)\n@show eltype(EURsubbm)\n@show typeof(EURsubbm) <: AbstractMatrix;","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"size(EURsubbm) = (50, 50)\neltype(EURsubbm) = Float64\ntypeof(EURsubbm) <: AbstractMatrix = true","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"using LinearAlgebra\nv1 = randn(size(EURsub, 1))\nv2 = randn(size(EURsub, 2))\nA = convert(Matrix{Float64}, EURsub, model=ADDITIVE_MODEL, center=true, scale=true)\nnorm(EURsubbm * v2 -  A * v2)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"7.353538967413897e-14","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"norm(EURsubbm' * v1 - A' * v1)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"1.3075674944530023e-14","category":"page"},{"location":"#Two-alternatives:-SnpLinAlg-and-CuSnpArray","page":"SnpArrays.jl","title":"Two alternatives: SnpLinAlg and CuSnpArray","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Basically, creating SnpBitMatrix doubles the memory usage. If it becomes an issue,  direct linear algebra operations from a SnpArray is possible. ","category":"page"},{"location":"#SnpLinAlg","page":"SnpArrays.jl","title":"SnpLinAlg","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"const EURla = SnpLinAlg{Float64}(EUR; model=ADDITIVE_MODEL, center=true, scale=true);","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"v1 = randn(size(EUR, 1))\nv2 = randn(size(EUR, 2))\nout1 = Vector{Float64}(undef, size(EUR, 1))\nout2 = Vector{Float64}(undef, size(EUR, 2))\n@btime mul!($out1, $EURla, $v2);","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"  56.437 ms (0 allocations: 0 bytes)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"@btime mul!($out2, transpose($EURla), $v1);","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"  55.725 ms (1 allocation: 16 bytes)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"However, this is much slower than SnpBitMatrix. With a 100 times larger data, it was about 5 times slower than SnpBitMatrix.","category":"page"},{"location":"#CuSnpArray","page":"SnpArrays.jl","title":"CuSnpArray","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"On machines with Nvidia GPU, matrix-vector multiplications can be performed on it via CuSnpArray. The input vectors should be CuVectors. ","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"ENV[\"JULIA_CUDA_USE_BINARYBUILDER\"] = \"false\" # will use local CUDA installation\nusing CUDA, Adapt\nv1_d = adapt(CuVector{Float64}, v1) # sends data to GPU\nv2_d = adapt(CuVector{Float64}, v2)\nout1_d = adapt(CuVector{Float64}, out1)\nout2_d = adapt(CuVector{Float64}, out2)\n\nconst EURcu = CuSnpArray{Float64}(EUR; model=ADDITIVE_MODEL, center=true, scale=true);","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"┌ Warning: `haskey(::TargetIterator, name::String)` is deprecated, use `Target(; name = name) !== nothing` instead.\n│   caller = llvm_compat(::VersionNumber) at compatibility.jl:176\n└ @ CUDA /home/kose/.julia/packages/CUDA/5t6R9/deps/compatibility.jl:176","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"@btime mul!($out1_d, $EURcu, $v2_d);","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"┌ Warning: `Target(triple::String)` is deprecated, use `Target(; triple = triple)` instead.\n│   caller = ip:0x0\n└ @ Core :-1\n\n\n  18.810 ms (193 allocations: 6.11 KiB)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"@btime mul!($out2_d, transpose($EURcu), $v1_d);","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"  486.464 μs (400 allocations: 13.34 KiB)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"The operations are parallelized along the output dimension, hence the GPU was not fully utilized in the first case. With 100-time larger data, 30 to 50-fold speedup were observed for both cases with Nvidia Titan V.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Let's check correctness of the result.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"norm(collect(EURcu' * v1_d) -  EURbm' * v1)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"2.4764076423646187e-11","category":"page"},{"location":"#SnpData","page":"SnpArrays.jl","title":"SnpData","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"We can create a SnpData, which has a SnpArray with information on SNP and subject appended.","category":"page"},{"location":"#Constructor-3","page":"SnpArrays.jl","title":"Constructor","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"EUR_data = SnpData(SnpArrays.datadir(\"EUR_subset\"))","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpData(people: 379, snps: 54051,\nsnp_info: \n│ Row │ chromosome │ snpid       │ genetic_distance │ position │ allele1 │ allele2 │\n│     │ String     │ String      │ Float64          │ Int64    │ Cat…    │ Cat…    │\n├─────┼────────────┼─────────────┼──────────────────┼──────────┼─────────┼─────────┤\n│ 1   │ 17         │ rs34151105  │ 0.0              │ 1665     │ T       │ C       │\n│ 2   │ 17         │ rs143500173 │ 0.0              │ 2748     │ T       │ A       │\n│ 3   │ 17         │ rs113560219 │ 0.0              │ 4702     │ T       │ C       │\n│ 4   │ 17         │ rs1882989   │ 5.6e-5           │ 15222    │ G       │ A       │\n│ 5   │ 17         │ rs8069133   │ 0.000499         │ 32311    │ G       │ A       │\n│ 6   │ 17         │ rs112221137 │ 0.000605         │ 36405    │ G       │ T       │\n…,\nperson_info: \n│ Row │ fid      │ iid      │ father   │ mother   │ sex      │ phenotype │\n│     │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstract… │\n├─────┼──────────┼──────────┼──────────┼──────────┼──────────┼───────────┤\n│ 1   │ 1        │ HG00096  │ 0        │ 0        │ 1        │ 1         │\n│ 2   │ 2        │ HG00097  │ 0        │ 0        │ 2        │ 1         │\n│ 3   │ 3        │ HG00099  │ 0        │ 0        │ 2        │ 1         │\n│ 4   │ 4        │ HG00100  │ 0        │ 0        │ 2        │ 1         │\n│ 5   │ 5        │ HG00101  │ 0        │ 0        │ 1        │ 1         │\n│ 6   │ 6        │ HG00102  │ 0        │ 0        │ 2        │ 1         │\n…,\nsrcbed: /home/kose/.julia/dev/SnpArrays/src/../data/EUR_subset.bed\nsrcbim: /home/kose/.julia/dev/SnpArrays/src/../data/EUR_subset.bim\nsrcfam: /home/kose/.julia/dev/SnpArrays/src/../data/EUR_subset.fam\n)","category":"page"},{"location":"#Filter","page":"SnpArrays.jl","title":"Filter","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"We can filter SnpData by functions f_person and f_snp. f_person applies to the field person_info and selects persons (rows) for which f_person is true.f_snp applies to the field snp_info and selects snps (columns) for which f_snp is true. The first argument can be either a SnpData or an AbstractString.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpArrays.filter(EUR_data; des=\"tmp.filter.chr.17\", f_snp = x -> x[:chromosome]==\"17\")","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpData(people: 379, snps: 11041,\nsnp_info: \n│ Row │ chromosome │ snpid       │ genetic_distance │ position │ allele1 │ allele2 │\n│     │ String     │ String      │ Float64          │ Int64    │ Cat…    │ Cat…    │\n├─────┼────────────┼─────────────┼──────────────────┼──────────┼─────────┼─────────┤\n│ 1   │ 17         │ rs34151105  │ 0.0              │ 1665     │ T       │ C       │\n│ 2   │ 17         │ rs143500173 │ 0.0              │ 2748     │ T       │ A       │\n│ 3   │ 17         │ rs113560219 │ 0.0              │ 4702     │ T       │ C       │\n│ 4   │ 17         │ rs1882989   │ 5.6e-5           │ 15222    │ G       │ A       │\n│ 5   │ 17         │ rs8069133   │ 0.000499         │ 32311    │ G       │ A       │\n│ 6   │ 17         │ rs112221137 │ 0.000605         │ 36405    │ G       │ T       │\n…,\nperson_info: \n│ Row │ fid      │ iid      │ father   │ mother   │ sex      │ phenotype │\n│     │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstract… │\n├─────┼──────────┼──────────┼──────────┼──────────┼──────────┼───────────┤\n│ 1   │ 1        │ HG00096  │ 0        │ 0        │ 1        │ 1         │\n│ 2   │ 2        │ HG00097  │ 0        │ 0        │ 2        │ 1         │\n│ 3   │ 3        │ HG00099  │ 0        │ 0        │ 2        │ 1         │\n│ 4   │ 4        │ HG00100  │ 0        │ 0        │ 2        │ 1         │\n│ 5   │ 5        │ HG00101  │ 0        │ 0        │ 1        │ 1         │\n│ 6   │ 6        │ HG00102  │ 0        │ 0        │ 2        │ 1         │\n…,\nsrcbed: tmp.filter.chr.17.bed\nsrcbim: tmp.filter.chr.17.bim\nsrcfam: tmp.filter.chr.17.fam\n)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpArrays.filter(SnpArrays.datadir(\"EUR_subset\"); des=\"tmp.filter.chr.17\", f_snp = x -> x[:chromosome]==\"17\")","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpData(people: 379, snps: 11041,\nsnp_info: \n│ Row │ chromosome │ snpid       │ genetic_distance │ position │ allele1 │ allele2 │\n│     │ String     │ String      │ Float64          │ Int64    │ Cat…    │ Cat…    │\n├─────┼────────────┼─────────────┼──────────────────┼──────────┼─────────┼─────────┤\n│ 1   │ 17         │ rs34151105  │ 0.0              │ 1665     │ T       │ C       │\n│ 2   │ 17         │ rs143500173 │ 0.0              │ 2748     │ T       │ A       │\n│ 3   │ 17         │ rs113560219 │ 0.0              │ 4702     │ T       │ C       │\n│ 4   │ 17         │ rs1882989   │ 5.6e-5           │ 15222    │ G       │ A       │\n│ 5   │ 17         │ rs8069133   │ 0.000499         │ 32311    │ G       │ A       │\n│ 6   │ 17         │ rs112221137 │ 0.000605         │ 36405    │ G       │ T       │\n…,\nperson_info: \n│ Row │ fid      │ iid      │ father   │ mother   │ sex      │ phenotype │\n│     │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstract… │\n├─────┼──────────┼──────────┼──────────┼──────────┼──────────┼───────────┤\n│ 1   │ 1        │ HG00096  │ 0        │ 0        │ 1        │ 1         │\n│ 2   │ 2        │ HG00097  │ 0        │ 0        │ 2        │ 1         │\n│ 3   │ 3        │ HG00099  │ 0        │ 0        │ 2        │ 1         │\n│ 4   │ 4        │ HG00100  │ 0        │ 0        │ 2        │ 1         │\n│ 5   │ 5        │ HG00101  │ 0        │ 0        │ 1        │ 1         │\n│ 6   │ 6        │ HG00102  │ 0        │ 0        │ 2        │ 1         │\n…,\nsrcbed: tmp.filter.chr.17.bed\nsrcbim: tmp.filter.chr.17.bim\nsrcfam: tmp.filter.chr.17.fam\n)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpArrays.filter(EUR_data; des=\"tmp.filter.sex.male\", f_person = x -> x[:sex] == \"1\")","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpData(people: 178, snps: 54051,\nsnp_info: \n│ Row │ chromosome │ snpid       │ genetic_distance │ position │ allele1 │ allele2 │\n│     │ String     │ String      │ Float64          │ Int64    │ Cat…    │ Cat…    │\n├─────┼────────────┼─────────────┼──────────────────┼──────────┼─────────┼─────────┤\n│ 1   │ 17         │ rs34151105  │ 0.0              │ 1665     │ T       │ C       │\n│ 2   │ 17         │ rs143500173 │ 0.0              │ 2748     │ T       │ A       │\n│ 3   │ 17         │ rs113560219 │ 0.0              │ 4702     │ T       │ C       │\n│ 4   │ 17         │ rs1882989   │ 5.6e-5           │ 15222    │ G       │ A       │\n│ 5   │ 17         │ rs8069133   │ 0.000499         │ 32311    │ G       │ A       │\n│ 6   │ 17         │ rs112221137 │ 0.000605         │ 36405    │ G       │ T       │\n…,\nperson_info: \n│ Row │ fid      │ iid      │ father   │ mother   │ sex      │ phenotype │\n│     │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstract… │\n├─────┼──────────┼──────────┼──────────┼──────────┼──────────┼───────────┤\n│ 1   │ 1        │ HG00096  │ 0        │ 0        │ 1        │ 1         │\n│ 2   │ 5        │ HG00101  │ 0        │ 0        │ 1        │ 1         │\n│ 3   │ 7        │ HG00103  │ 0        │ 0        │ 1        │ 1         │\n│ 4   │ 10       │ HG00108  │ 0        │ 0        │ 1        │ 1         │\n│ 5   │ 11       │ HG00109  │ 0        │ 0        │ 1        │ 1         │\n│ 6   │ 14       │ HG00112  │ 0        │ 0        │ 1        │ 1         │\n…,\nsrcbed: tmp.filter.sex.male.bed\nsrcbim: tmp.filter.sex.male.bim\nsrcfam: tmp.filter.sex.male.fam\n)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Both f_person and f_snp can be used at the same time.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpArrays.filter(EUR_data; des=\"tmp.filter.chr.17.sex.male\", f_person = x -> x[:sex] == \"1\", f_snp = x -> x[:chromosome] == \"17\")","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpData(people: 178, snps: 11041,\nsnp_info: \n│ Row │ chromosome │ snpid       │ genetic_distance │ position │ allele1 │ allele2 │\n│     │ String     │ String      │ Float64          │ Int64    │ Cat…    │ Cat…    │\n├─────┼────────────┼─────────────┼──────────────────┼──────────┼─────────┼─────────┤\n│ 1   │ 17         │ rs34151105  │ 0.0              │ 1665     │ T       │ C       │\n│ 2   │ 17         │ rs143500173 │ 0.0              │ 2748     │ T       │ A       │\n│ 3   │ 17         │ rs113560219 │ 0.0              │ 4702     │ T       │ C       │\n│ 4   │ 17         │ rs1882989   │ 5.6e-5           │ 15222    │ G       │ A       │\n│ 5   │ 17         │ rs8069133   │ 0.000499         │ 32311    │ G       │ A       │\n│ 6   │ 17         │ rs112221137 │ 0.000605         │ 36405    │ G       │ T       │\n…,\nperson_info: \n│ Row │ fid      │ iid      │ father   │ mother   │ sex      │ phenotype │\n│     │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstract… │\n├─────┼──────────┼──────────┼──────────┼──────────┼──────────┼───────────┤\n│ 1   │ 1        │ HG00096  │ 0        │ 0        │ 1        │ 1         │\n│ 2   │ 5        │ HG00101  │ 0        │ 0        │ 1        │ 1         │\n│ 3   │ 7        │ HG00103  │ 0        │ 0        │ 1        │ 1         │\n│ 4   │ 10       │ HG00108  │ 0        │ 0        │ 1        │ 1         │\n│ 5   │ 11       │ HG00109  │ 0        │ 0        │ 1        │ 1         │\n│ 6   │ 14       │ HG00112  │ 0        │ 0        │ 1        │ 1         │\n…,\nsrcbed: tmp.filter.chr.17.sex.male.bed\nsrcbim: tmp.filter.chr.17.sex.male.bim\nsrcfam: tmp.filter.chr.17.sex.male.fam\n)","category":"page"},{"location":"#Split","page":"SnpArrays.jl","title":"Split","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"We can split SnpData by SNP's choromosomes or each person's sex or phenotype using split_plink. Again, the first argument can be an SnpData or an AbstractString.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"splitted = SnpArrays.split_plink(SnpArrays.datadir(\"EUR_subset\"), :chromosome; prefix=\"tmp.split.chr.\")","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Dict{AbstractString,SnpData} with 6 entries:\n  \"21\" => SnpData(people: 379, snps: 5813,…\n  \"17\" => SnpData(people: 379, snps: 11041,…\n  \"19\" => SnpData(people: 379, snps: 9690,…\n  \"20\" => SnpData(people: 379, snps: 9327,…\n  \"22\" => SnpData(people: 379, snps: 5938,…\n  \"18\" => SnpData(people: 379, snps: 12242,…","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Let's take a SnpArray for chromosome 17.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"piece = splitted[\"17\"]","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpData(people: 379, snps: 11041,\nsnp_info: \n│ Row │ chromosome │ snpid       │ genetic_distance │ position │ allele1 │ allele2 │\n│     │ String     │ String      │ Float64          │ Int64    │ Cat…    │ Cat…    │\n├─────┼────────────┼─────────────┼──────────────────┼──────────┼─────────┼─────────┤\n│ 1   │ 17         │ rs34151105  │ 0.0              │ 1665     │ T       │ C       │\n│ 2   │ 17         │ rs143500173 │ 0.0              │ 2748     │ T       │ A       │\n│ 3   │ 17         │ rs113560219 │ 0.0              │ 4702     │ T       │ C       │\n│ 4   │ 17         │ rs1882989   │ 5.6e-5           │ 15222    │ G       │ A       │\n│ 5   │ 17         │ rs8069133   │ 0.000499         │ 32311    │ G       │ A       │\n│ 6   │ 17         │ rs112221137 │ 0.000605         │ 36405    │ G       │ T       │\n…,\nperson_info: \n│ Row │ fid      │ iid      │ father   │ mother   │ sex      │ phenotype │\n│     │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstract… │\n├─────┼──────────┼──────────┼──────────┼──────────┼──────────┼───────────┤\n│ 1   │ 1        │ HG00096  │ 0        │ 0        │ 1        │ 1         │\n│ 2   │ 2        │ HG00097  │ 0        │ 0        │ 2        │ 1         │\n│ 3   │ 3        │ HG00099  │ 0        │ 0        │ 2        │ 1         │\n│ 4   │ 4        │ HG00100  │ 0        │ 0        │ 2        │ 1         │\n│ 5   │ 5        │ HG00101  │ 0        │ 0        │ 1        │ 1         │\n│ 6   │ 6        │ HG00102  │ 0        │ 0        │ 2        │ 1         │\n…,\nsrcbed: tmp.split.chr.17.bed\nsrcbim: tmp.split.chr.17.bim\nsrcfam: tmp.split.chr.17.fam\n)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"@assert all(piece.snp_info[!, :chromosome].== \"17\")","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"splitted_sex = SnpArrays.split_plink(EUR_data, :sex; prefix=\"tmp.split.sex.\")","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Dict{AbstractString,SnpData} with 2 entries:\n  \"1\" => SnpData(people: 178, snps: 54051,…\n  \"2\" => SnpData(people: 201, snps: 54051,…","category":"page"},{"location":"#Concatenation","page":"SnpArrays.jl","title":"Concatenation","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"hcat, vcat, and hvcat are also implemented for SnpData. All of .bed, .bim, .fam files are created. Simple concatenation expression can be used (with the side effect of creation of temporary plink files). One may also set the desitination using the keyword argument des. ","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"[piece piece]","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpData(people: 379, snps: 22082,\nsnp_info: \n│ Row │ chromosome │ snpid       │ genetic_distance │ position │ allele1 │ allele2 │\n│     │ String     │ String      │ Float64          │ Int64    │ Cat…    │ Cat…    │\n├─────┼────────────┼─────────────┼──────────────────┼──────────┼─────────┼─────────┤\n│ 1   │ 17         │ rs34151105  │ 0.0              │ 1665     │ T       │ C       │\n│ 2   │ 17         │ rs143500173 │ 0.0              │ 2748     │ T       │ A       │\n│ 3   │ 17         │ rs113560219 │ 0.0              │ 4702     │ T       │ C       │\n│ 4   │ 17         │ rs1882989   │ 5.6e-5           │ 15222    │ G       │ A       │\n│ 5   │ 17         │ rs8069133   │ 0.000499         │ 32311    │ G       │ A       │\n│ 6   │ 17         │ rs112221137 │ 0.000605         │ 36405    │ G       │ T       │\n…,\nperson_info: \n│ Row │ fid      │ iid      │ father   │ mother   │ sex      │ phenotype │\n│     │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstract… │\n├─────┼──────────┼──────────┼──────────┼──────────┼──────────┼───────────┤\n│ 1   │ 1        │ HG00096  │ 0        │ 0        │ 1        │ 1         │\n│ 2   │ 2        │ HG00097  │ 0        │ 0        │ 2        │ 1         │\n│ 3   │ 3        │ HG00099  │ 0        │ 0        │ 2        │ 1         │\n│ 4   │ 4        │ HG00100  │ 0        │ 0        │ 2        │ 1         │\n│ 5   │ 5        │ HG00101  │ 0        │ 0        │ 1        │ 1         │\n│ 6   │ 6        │ HG00102  │ 0        │ 0        │ 2        │ 1         │\n…,\nsrcbed: tmp_hcat_1.bed\nsrcbim: tmp_hcat_1.bim\nsrcfam: tmp_hcat_1.fam\n)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"[piece; piece]","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpData(people: 758, snps: 11041,\nsnp_info: \n│ Row │ chromosome │ snpid       │ genetic_distance │ position │ allele1 │ allele2 │\n│     │ String     │ String      │ Float64          │ Int64    │ Cat…    │ Cat…    │\n├─────┼────────────┼─────────────┼──────────────────┼──────────┼─────────┼─────────┤\n│ 1   │ 17         │ rs34151105  │ 0.0              │ 1665     │ T       │ C       │\n│ 2   │ 17         │ rs143500173 │ 0.0              │ 2748     │ T       │ A       │\n│ 3   │ 17         │ rs113560219 │ 0.0              │ 4702     │ T       │ C       │\n│ 4   │ 17         │ rs1882989   │ 5.6e-5           │ 15222    │ G       │ A       │\n│ 5   │ 17         │ rs8069133   │ 0.000499         │ 32311    │ G       │ A       │\n│ 6   │ 17         │ rs112221137 │ 0.000605         │ 36405    │ G       │ T       │\n…,\nperson_info: \n│ Row │ fid      │ iid      │ father   │ mother   │ sex      │ phenotype │\n│     │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstract… │\n├─────┼──────────┼──────────┼──────────┼──────────┼──────────┼───────────┤\n│ 1   │ 1        │ HG00096  │ 0        │ 0        │ 1        │ 1         │\n│ 2   │ 2        │ HG00097  │ 0        │ 0        │ 2        │ 1         │\n│ 3   │ 3        │ HG00099  │ 0        │ 0        │ 2        │ 1         │\n│ 4   │ 4        │ HG00100  │ 0        │ 0        │ 2        │ 1         │\n│ 5   │ 5        │ HG00101  │ 0        │ 0        │ 1        │ 1         │\n│ 6   │ 6        │ HG00102  │ 0        │ 0        │ 2        │ 1         │\n…,\nsrcbed: tmp_vcat_1.bed\nsrcbim: tmp_vcat_1.bim\nsrcfam: tmp_vcat_1.fam\n)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"[piece piece; piece piece]","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpData(people: 758, snps: 22082,\nsnp_info: \n│ Row │ chromosome │ snpid       │ genetic_distance │ position │ allele1 │ allele2 │\n│     │ String     │ String      │ Float64          │ Int64    │ Cat…    │ Cat…    │\n├─────┼────────────┼─────────────┼──────────────────┼──────────┼─────────┼─────────┤\n│ 1   │ 17         │ rs34151105  │ 0.0              │ 1665     │ T       │ C       │\n│ 2   │ 17         │ rs143500173 │ 0.0              │ 2748     │ T       │ A       │\n│ 3   │ 17         │ rs113560219 │ 0.0              │ 4702     │ T       │ C       │\n│ 4   │ 17         │ rs1882989   │ 5.6e-5           │ 15222    │ G       │ A       │\n│ 5   │ 17         │ rs8069133   │ 0.000499         │ 32311    │ G       │ A       │\n│ 6   │ 17         │ rs112221137 │ 0.000605         │ 36405    │ G       │ T       │\n…,\nperson_info: \n│ Row │ fid      │ iid      │ father   │ mother   │ sex      │ phenotype │\n│     │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstract… │\n├─────┼──────────┼──────────┼──────────┼──────────┼──────────┼───────────┤\n│ 1   │ 1        │ HG00096  │ 0        │ 0        │ 1        │ 1         │\n│ 2   │ 2        │ HG00097  │ 0        │ 0        │ 2        │ 1         │\n│ 3   │ 3        │ HG00099  │ 0        │ 0        │ 2        │ 1         │\n│ 4   │ 4        │ HG00100  │ 0        │ 0        │ 2        │ 1         │\n│ 5   │ 5        │ HG00101  │ 0        │ 0        │ 1        │ 1         │\n│ 6   │ 6        │ HG00102  │ 0        │ 0        │ 2        │ 1         │\n…,\nsrcbed: tmp_hvcat1.bed\nsrcbim: tmp_hvcat1.bim\nsrcfam: tmp_hvcat1.fam\n)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"hcat(piece, piece; des=\"tmp.hcat\")","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpData(people: 379, snps: 22082,\nsnp_info: \n│ Row │ chromosome │ snpid       │ genetic_distance │ position │ allele1 │ allele2 │\n│     │ String     │ String      │ Float64          │ Int64    │ Cat…    │ Cat…    │\n├─────┼────────────┼─────────────┼──────────────────┼──────────┼─────────┼─────────┤\n│ 1   │ 17         │ rs34151105  │ 0.0              │ 1665     │ T       │ C       │\n│ 2   │ 17         │ rs143500173 │ 0.0              │ 2748     │ T       │ A       │\n│ 3   │ 17         │ rs113560219 │ 0.0              │ 4702     │ T       │ C       │\n│ 4   │ 17         │ rs1882989   │ 5.6e-5           │ 15222    │ G       │ A       │\n│ 5   │ 17         │ rs8069133   │ 0.000499         │ 32311    │ G       │ A       │\n│ 6   │ 17         │ rs112221137 │ 0.000605         │ 36405    │ G       │ T       │\n…,\nperson_info: \n│ Row │ fid      │ iid      │ father   │ mother   │ sex      │ phenotype │\n│     │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstract… │\n├─────┼──────────┼──────────┼──────────┼──────────┼──────────┼───────────┤\n│ 1   │ 1        │ HG00096  │ 0        │ 0        │ 1        │ 1         │\n│ 2   │ 2        │ HG00097  │ 0        │ 0        │ 2        │ 1         │\n│ 3   │ 3        │ HG00099  │ 0        │ 0        │ 2        │ 1         │\n│ 4   │ 4        │ HG00100  │ 0        │ 0        │ 2        │ 1         │\n│ 5   │ 5        │ HG00101  │ 0        │ 0        │ 1        │ 1         │\n│ 6   │ 6        │ HG00102  │ 0        │ 0        │ 2        │ 1         │\n…,\nsrcbed: tmp.hcat.bed\nsrcbim: tmp.hcat.bim\nsrcfam: tmp.hcat.fam\n)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"vcat(piece, piece; des=\"tmp.vcat\")","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpData(people: 758, snps: 11041,\nsnp_info: \n│ Row │ chromosome │ snpid       │ genetic_distance │ position │ allele1 │ allele2 │\n│     │ String     │ String      │ Float64          │ Int64    │ Cat…    │ Cat…    │\n├─────┼────────────┼─────────────┼──────────────────┼──────────┼─────────┼─────────┤\n│ 1   │ 17         │ rs34151105  │ 0.0              │ 1665     │ T       │ C       │\n│ 2   │ 17         │ rs143500173 │ 0.0              │ 2748     │ T       │ A       │\n│ 3   │ 17         │ rs113560219 │ 0.0              │ 4702     │ T       │ C       │\n│ 4   │ 17         │ rs1882989   │ 5.6e-5           │ 15222    │ G       │ A       │\n│ 5   │ 17         │ rs8069133   │ 0.000499         │ 32311    │ G       │ A       │\n│ 6   │ 17         │ rs112221137 │ 0.000605         │ 36405    │ G       │ T       │\n…,\nperson_info: \n│ Row │ fid      │ iid      │ father   │ mother   │ sex      │ phenotype │\n│     │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstract… │\n├─────┼──────────┼──────────┼──────────┼──────────┼──────────┼───────────┤\n│ 1   │ 1        │ HG00096  │ 0        │ 0        │ 1        │ 1         │\n│ 2   │ 2        │ HG00097  │ 0        │ 0        │ 2        │ 1         │\n│ 3   │ 3        │ HG00099  │ 0        │ 0        │ 2        │ 1         │\n│ 4   │ 4        │ HG00100  │ 0        │ 0        │ 2        │ 1         │\n│ 5   │ 5        │ HG00101  │ 0        │ 0        │ 1        │ 1         │\n│ 6   │ 6        │ HG00102  │ 0        │ 0        │ 2        │ 1         │\n…,\nsrcbed: tmp.vcat.bed\nsrcbim: tmp.vcat.bim\nsrcfam: tmp.vcat.fam\n)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"hvcat((2,2), piece, piece, piece, piece; des=\"tmp.hvcat\")","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpData(people: 758, snps: 22082,\nsnp_info: \n│ Row │ chromosome │ snpid       │ genetic_distance │ position │ allele1 │ allele2 │\n│     │ String     │ String      │ Float64          │ Int64    │ Cat…    │ Cat…    │\n├─────┼────────────┼─────────────┼──────────────────┼──────────┼─────────┼─────────┤\n│ 1   │ 17         │ rs34151105  │ 0.0              │ 1665     │ T       │ C       │\n│ 2   │ 17         │ rs143500173 │ 0.0              │ 2748     │ T       │ A       │\n│ 3   │ 17         │ rs113560219 │ 0.0              │ 4702     │ T       │ C       │\n│ 4   │ 17         │ rs1882989   │ 5.6e-5           │ 15222    │ G       │ A       │\n│ 5   │ 17         │ rs8069133   │ 0.000499         │ 32311    │ G       │ A       │\n│ 6   │ 17         │ rs112221137 │ 0.000605         │ 36405    │ G       │ T       │\n…,\nperson_info: \n│ Row │ fid      │ iid      │ father   │ mother   │ sex      │ phenotype │\n│     │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstract… │\n├─────┼──────────┼──────────┼──────────┼──────────┼──────────┼───────────┤\n│ 1   │ 1        │ HG00096  │ 0        │ 0        │ 1        │ 1         │\n│ 2   │ 2        │ HG00097  │ 0        │ 0        │ 2        │ 1         │\n│ 3   │ 3        │ HG00099  │ 0        │ 0        │ 2        │ 1         │\n│ 4   │ 4        │ HG00100  │ 0        │ 0        │ 2        │ 1         │\n│ 5   │ 5        │ HG00101  │ 0        │ 0        │ 1        │ 1         │\n│ 6   │ 6        │ HG00102  │ 0        │ 0        │ 2        │ 1         │\n…,\nsrcbed: tmp.hvcat.bed\nsrcbim: tmp.hvcat.bim\nsrcfam: tmp.hvcat.fam\n)","category":"page"},{"location":"#Merge","page":"SnpArrays.jl","title":"Merge","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"We can merge the splitted dictionary back into one SnpData using merge_plink.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"merged = SnpArrays.merge_plink(\"tmp.merged\", splitted) # write_plink is included here","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"  0.066660 seconds (117.18 k allocations: 7.904 MiB)\n  0.054178 seconds (133.64 k allocations: 11.951 MiB)\n  0.050596 seconds (134.18 k allocations: 8.737 MiB)\n\n\n\n\n\nSnpData(people: 379, snps: 54051,\nsnp_info: \n│ Row │ chromosome │ snpid       │ genetic_distance │ position │ allele1 │ allele2 │\n│     │ String     │ String      │ Float64          │ Int64    │ Cat…    │ Cat…    │\n├─────┼────────────┼─────────────┼──────────────────┼──────────┼─────────┼─────────┤\n│ 1   │ 17         │ rs34151105  │ 0.0              │ 1665     │ T       │ C       │\n│ 2   │ 17         │ rs143500173 │ 0.0              │ 2748     │ T       │ A       │\n│ 3   │ 17         │ rs113560219 │ 0.0              │ 4702     │ T       │ C       │\n│ 4   │ 17         │ rs1882989   │ 5.6e-5           │ 15222    │ G       │ A       │\n│ 5   │ 17         │ rs8069133   │ 0.000499         │ 32311    │ G       │ A       │\n│ 6   │ 17         │ rs112221137 │ 0.000605         │ 36405    │ G       │ T       │\n…,\nperson_info: \n│ Row │ fid      │ iid      │ father   │ mother   │ sex      │ phenotype │\n│     │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstract… │\n├─────┼──────────┼──────────┼──────────┼──────────┼──────────┼───────────┤\n│ 1   │ 1        │ HG00096  │ 0        │ 0        │ 1        │ 1         │\n│ 2   │ 2        │ HG00097  │ 0        │ 0        │ 2        │ 1         │\n│ 3   │ 3        │ HG00099  │ 0        │ 0        │ 2        │ 1         │\n│ 4   │ 4        │ HG00100  │ 0        │ 0        │ 2        │ 1         │\n│ 5   │ 5        │ HG00101  │ 0        │ 0        │ 1        │ 1         │\n│ 6   │ 6        │ HG00102  │ 0        │ 0        │ 2        │ 1         │\n…,\nsrcbed: tmp.merged.bim\nsrcbim: tmp.merged.bed\nsrcfam: tmp.merged.fam\n)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"You can also merge the plink formatted files based on their common prefix.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"merged_from_splitted_files = merge_plink(\"tmp.split.chr\"; des = \"tmp.merged.2\")","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"  0.144906 seconds (783.54 k allocations: 36.317 MiB)\n  0.567382 seconds (1.19 M allocations: 61.136 MiB)\n  0.003839 seconds (8 allocations: 4.897 MiB)\n  0.001226 seconds (8 allocations: 1.650 MiB)\n\n\n\n\n\nSnpData(people: 379, snps: 54051,\nsnp_info: \n│ Row │ chromosome │ snpid       │ genetic_distance │ position │ allele1 │ allele2 │\n│     │ String     │ String      │ Float64          │ Int64    │ Cat…    │ Cat…    │\n├─────┼────────────┼─────────────┼──────────────────┼──────────┼─────────┼─────────┤\n│ 1   │ 17         │ rs34151105  │ 0.0              │ 1665     │ T       │ C       │\n│ 2   │ 17         │ rs143500173 │ 0.0              │ 2748     │ T       │ A       │\n│ 3   │ 17         │ rs113560219 │ 0.0              │ 4702     │ T       │ C       │\n│ 4   │ 17         │ rs1882989   │ 5.6e-5           │ 15222    │ G       │ A       │\n│ 5   │ 17         │ rs8069133   │ 0.000499         │ 32311    │ G       │ A       │\n│ 6   │ 17         │ rs112221137 │ 0.000605         │ 36405    │ G       │ T       │\n…,\nperson_info: \n│ Row │ fid      │ iid      │ father   │ mother   │ sex      │ phenotype │\n│     │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstrac… │ Abstract… │\n├─────┼──────────┼──────────┼──────────┼──────────┼──────────┼───────────┤\n│ 1   │ 1        │ HG00096  │ 0        │ 0        │ 1        │ 1         │\n│ 2   │ 2        │ HG00097  │ 0        │ 0        │ 2        │ 1         │\n│ 3   │ 3        │ HG00099  │ 0        │ 0        │ 2        │ 1         │\n│ 4   │ 4        │ HG00100  │ 0        │ 0        │ 2        │ 1         │\n│ 5   │ 5        │ HG00101  │ 0        │ 0        │ 1        │ 1         │\n│ 6   │ 6        │ HG00102  │ 0        │ 0        │ 2        │ 1         │\n…,\nsrcbed: tmp.merged.2.bim\nsrcbim: tmp.merged.2.bed\nsrcfam: tmp.merged.2.fam\n)","category":"page"},{"location":"#Reorder","page":"SnpArrays.jl","title":"Reorder","text":"","category":"section"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Order of subjects can be changed using the function reorder!.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"const mouse_prefix = SnpArrays.datadir(\"mouse\")\nrun(`cp $(mouse_prefix * \".bed\") mouse_reorder.bed`)\nrun(`cp $(mouse_prefix * \".bim\") mouse_reorder.bim`)\nrun(`cp $(mouse_prefix * \".fam\") mouse_reorder.fam`)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"Process(`\u001b[4mcp\u001b[24m \u001b[4m/home/kose/.julia/dev/SnpArrays/src/../data/mouse.fam\u001b[24m \u001b[4mmouse_reorder.fam\u001b[24m`, ProcessExited(0))","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"mouse_data = SnpData(mouse_prefix)\nmouse_toreorder = SnpData(\"mouse_reorder\", \"r+\")\nm, n = size(mouse_toreorder.snparray)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"(1940, 10150)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"For example, the below randomly permutes subjects.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"using Random\nind = randperm(m)\nSnpArrays.reorder!(mouse_toreorder, ind)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"mouse_toreorder","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"SnpData(people: 1940, snps: 10150,\nsnp_info: \n│ Row │ chromosome │ snpid      │ genetic_distance │ position │ allele1 │ allele2 │\n│     │ String     │ String     │ Float64          │ Int64    │ Cat…    │ Cat…    │\n├─────┼────────────┼────────────┼──────────────────┼──────────┼─────────┼─────────┤\n│ 1   │ 1          │ rs3683945  │ 0.0              │ 0        │ A       │ G       │\n│ 2   │ 1          │ rs3707673  │ 0.1              │ 1        │ G       │ A       │\n│ 3   │ 1          │ rs6269442  │ 0.11751          │ 2        │ A       │ G       │\n│ 4   │ 1          │ rs6336442  │ 0.135771         │ 3        │ A       │ G       │\n│ 5   │ 1          │ rs13475700 │ 0.24268          │ 5        │ A       │ C       │\n│ 6   │ 1          │ rs3658242  │ 0.251925         │ 6        │ A       │ T       │\n…,\nperson_info: \n│ Row │ fid      │ iid        │ father       │ mother       │ sex      │ phenotype │\n│     │ Abstrac… │ AbstractS… │ AbstractStr… │ AbstractStr… │ Abstrac… │ Abstract… │\n├─────┼──────────┼────────────┼──────────────┼──────────────┼──────────┼───────────┤\n│ 1   │ 1_35     │ A066785804 │ B4.5:E2.4(6) │ B4.5:A5.4(2) │ 1        │ -9        │\n│ 2   │ 1_4      │ A063119082 │ B5.3:E1.2(5) │ B5.3:A2.2(5) │ 1        │ -9        │\n│ 3   │ 1_58     │ A063336815 │ B1.5:E1.4(4) │ B1.5:A1.4(5) │ 1        │ -9        │\n│ 4   │ 1_5      │ A067043528 │ F5.3:E2.2(6) │ F5.3:A3.2(5) │ 2        │ -9        │\n│ 5   │ 1_3      │ A053620586 │ H2.3:C5.2(3) │ H2.3:G2.2(3) │ 1        │ -9        │\n│ 6   │ 1_2      │ A048286571 │ G4.3:B5.2(3) │ G4.3:F2.2(3) │ 2        │ -9        │\n…,\nsrcbed: mouse_reorder.bed\nsrcbim: mouse_reorder.bim\nsrcfam: mouse_reorder.fam\n)","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"This functionality mainly targets Cox regression, where sorting subjects in decreasing order of (censored) survival time results in more efficient implementation.","category":"page"},{"location":"","page":"SnpArrays.jl","title":"SnpArrays.jl","text":"# clean up\nfor ft in [\"bim\", \"fam\", \"bed\"]\n    rm(\"tmp.filter.chr.17.\" * ft, force=true)\n    rm(\"tmp.filter.sex.male.\" * ft, force=true)\n    rm(\"tmp.filter.chr.17.sex.male.\" * ft, force=true)\n    for k in keys(splitted)\n        rm(\"tmp.split.chr.$(k).\" * ft, force=true)\n    end\n    for k in keys(splitted_sex)\n        rm(\"tmp.split.sex.$(k).\" * ft, force=true)\n    end\n    rm(\"tmp.merged.\" * ft, force=true)\n    rm(\"tmp.merged.2.\" * ft, force=true)\n    \n    rm(\"tmp.hcat.\" * ft, force=true)\n    rm(\"tmp.vcat.\" * ft, force=true)\n    rm(\"tmp.hvcat.\" * ft, force=true)\n\n    tmplist = glob(\"tmp_*\" * ft)\n    for f in tmplist\n        rm(f, force=true)\n    end\nend\ntmplist = readdir(glob\"tmp_*.bed\", \".\")\nfor f in tmplist\n    rm(f, force=true)\nend\nrm(\"mouse_reorder.bim\", force=true)\nrm(\"mouse_reorder.bed\", force=true)\nrm(\"mouse_reorder.fam\", force=true)\nrm(\"mouse_reorder.reordered.fam\", force=true)","category":"page"}]
}
